{"ast":null,"code":"export default {\n  name: \"List\",\n\n  data() {\n    return {\n      tasks: [],\n      taskSelected: []\n    };\n  },\n\n  created() {\n    this.tasks = localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : [];\n  },\n\n  methods: {\n    edit(index) {\n      this.$router.push({\n        name: \"form\",\n        params: {\n          index\n        }\n      });\n    },\n\n    remove(task, index) {\n      this.taskSelected = task;\n      this.taskSelected.index = index;\n      this.$refs.modalRemove.show();\n    },\n\n    hideModal() {\n      this.$refs.modalRemove.hide();\n    },\n\n    confirmRemoveTask() {\n      this.tasks.splice(this.taskSelected.index, 1);\n      localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n      this.hideModal();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgCA;EACAA,YADA;;EAGAC;IACA;MACAC,SADA;MAEAC;IAFA;EAIA,CARA;;EAUAC;IACA;EACA,CAZA;;EAcAC;IACAC;MACA;QAAAN;QAAAO;UAAAC;QAAA;MAAA;IACA,CAHA;;IAKAC;MACA;MACA;MACA;IACA,CATA;;IAWAC;MACA;IACA,CAbA;;IAeAC;MACA;MACAC;MACA;IACA;;EAnBA;AAdA","names":["name","data","tasks","taskSelected","created","methods","edit","params","index","remove","hideModal","confirmRemoveTask","localStorage"],"sourceRoot":"src/components","sources":["taskEditor.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-2\" v-if=\"tasks.length != 0\">\r\n      <div v-for=\"(task, index) in tasks\" :key=\"index\">\r\n        <b-card :title=\"task.subject\" class=\"mb-2\" id=\"card1\">\r\n          <b-card-text>{{ task.description }}</b-card-text>\r\n\r\n          <b-button variant=\"outline-secondary\" class=\"mr-2\" @click=\"edit(index)\"> Edit </b-button>\r\n          <b-button variant=\"outline-danger\" class=\"mr-2\" @click=\"remove(task, index)\"> Delete </b-button>\r\n        </b-card>\r\n      </div>\r\n\r\n      <b-modal ref=\"modalRemove\" hide-footer title=\"Deletion of a task\">\r\n        <div class=\"d-block text-center\">\r\n          <p>Do you really want to delete this task?</p>\r\n          <p>Tarefa: {{ taskSelected.subject }}</p>\r\n        </div>\r\n        <div class=\"mt-3 d-flex justify-content-end\">\r\n          <b-button variant=\"outline-secondary\" class=\"mr-2\" @click=\"hideModal\"> Cancel </b-button>\r\n          <b-button variant=\"outline-danger\" class=\"mr-2\" @click=\"confirmRemoveTask\"> Delete </b-button>\r\n        </div> \r\n      </b-modal>\r\n    </div>\r\n    <div class=\"container mt-2 alinhar\" v-else>\r\n      <b-card class=\"mb-2\" id=\"card1\">\r\n        <b-card-text>Man, you haven't created any tasks yet....</b-card-text>\r\n        <b-card-text>Let's create one?</b-card-text>\r\n        <b-button variant=\"outline-danger\" class=\"mr-2\" to=\"/form\">Just click here!</b-button>\r\n      </b-card>\r\n    </div>\r\n</template>\r\n    \r\n    <script>\r\n    export default {\r\n      name: \"List\",\r\n    \r\n      data() {\r\n        return {\r\n          tasks: [],\r\n          taskSelected: []\r\n        }\r\n      },\r\n    \r\n      created() {\r\n        this.tasks = (localStorage.getItem(\"tasks\")) ? JSON.parse(localStorage.getItem(\"tasks\")) : [];\r\n      },\r\n    \r\n      methods: {\r\n        edit(index) {\r\n          this.$router.push({ name: \"form\", params: { index } });\r\n        },\r\n    \r\n        remove(task, index) { \r\n          this.taskSelected = task;\r\n          this.taskSelected.index = index;\r\n          this.$refs.modalRemove.show();\r\n        },\r\n    \r\n        hideModal() {\r\n          this.$refs.modalRemove.hide();\r\n        },\r\n    \r\n        confirmRemoveTask() {\r\n          this.tasks.splice(this.taskSelected.index, 1);\r\n          localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\r\n          this.hideModal();\r\n        }\r\n      }\r\n    }\r\n    </script>\r\n    \r\n    <style>\r\n      #card1{\r\n      background-color: #342432;\r\n      border-radius: 20px;\r\n      color: rgb(219, 209, 209);\r\n      box-shadow: -1px 1px 11px 1px rgba(0,0,0,0.36);\r\n      -webkit-box-shadow: -1px 1px 11px 1px rgba(0,0,0,0.36);\r\n      }\r\n      .alinhar{\r\n        height: calc(100vh - 64px) !important;\r\n        width: 100vh !important;\r\n        display: flex !important;\r\n        justify-content: flex-start !important;\r\n        align-items: center !important;\r\n      }\r\n    </style>\r\n"]},"metadata":{},"sourceType":"module"}